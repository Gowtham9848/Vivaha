{"version":3,"sources":["service-worker.js"],"names":["self","__WB_MANIFEST","addEventListener","event","request","url","includes","respondWith","caches","match","then","response","fetch","fetchResponse","clonedResponse","clone","open","cache","put"],"mappings":"AAIA,svCAAK,cAAc,iBAAiB,SAAS,IACvC,EAAM,QAAQ,IAAI,SAAS,kBAC7B,EAAM,YACJ,OAAO,MAAM,EAAM,SAAS,MAAK,GAC3B,GAMG,MAAM,EAAM,SAAS,MAAK,IAE/B,MAAM,EAAiB,EAAc,QAOrC,OALA,OAAO,KAAK,YAAY,MAAK,IAE3B,EAAM,IAAI,EAAM,QAAS,EAAe,IAGnC,CAAa,MAI5B","file":"service-worker.js","sourceRoot":"","sourcesContent":["// In your service worker file (e.g., service-worker.js)\n\n/* eslint-disable no-restricted-globals */\n\nself.__WB_MANIFEST.addEventListener('fetch', event => {\n  if (event.request.url.includes('/static/media')) {\n    event.respondWith(\n      caches.match(event.request).then(response => {\n        if (response) {\n          // If response found in cache, return it\n          return response;\n        }\n\n        // If response not found in cache, fetch and cache it\n        return fetch(event.request).then(fetchResponse => {\n          // Clone the response as it's a stream and can only be consumed once\n          const clonedResponse = fetchResponse.clone();\n\n          caches.open('my-cache').then(cache => {\n            // Cache the fetched response\n            cache.put(event.request, clonedResponse);\n          });\n\n          return fetchResponse;\n        });\n      })\n    );\n  }\n});\n"]}